{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580834892895_-1047381637","id":"20200204-164812_1097555444","dateCreated":"2020-02-04T16:48:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2031","text":"%md\n\n# Requêtage Cassandra pour les 4 requêtes imposées + visualisation\n\n<font color=\"red\"> Suite à un problème d'exportation de fichier, ce fichier ne contient pas les prévisualisations montrées lors de la présentation mais les requêtes sont les mêmes. Ces requêtes devraient fonctionner de la même façon. </font>","dateUpdated":"2020-02-04T16:54:27+0000","dateFinished":"2020-02-04T16:54:27+0000","dateStarted":"2020-02-04T16:54:27+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Requêtage Cassandra pour les 4 requêtes imposées + visualisation</h1>\n<p><font color=\"red\"> Suite à un problème d&rsquo;exportation de fichier, ce fichier ne contient pas les prévisualisations montrées lors de la présentation mais les requêtes sont les mêmes. Ces requêtes devraient fonctionner de la même façon. </font></p>\n</div>"}]}},{"title":"Importation ","text":"import sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection \nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types.IntegerType\nimport scala.util.matching.Regex\n\nimport com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.auth.BasicSessionCredentials\n\nimport org.apache.hadoop.fs.s3a.S3AFileSystem\nimport com.amazonaws.services.s3.transfer.TransferManager\n\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader","user":"anonymous","dateUpdated":"2020-02-04T16:34:24+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types.IntegerType\nimport scala.util.matching.Regex\nimport com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.auth.BasicSessionCredentials\nimport org.apache.hadoop.fs.s3a.S3AFileSystem\nimport com.amazonaws.services.s3.transfer.TransferManager\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n"}]},"apps":[],"jobName":"paragraph_1580834064481_125298739","id":"20200123-181129_1774422889","dateCreated":"2020-02-04T16:34:24+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1379"},{"title":"Requete 1 ","text":"val df_requete_1 = spark.read\n      .format(\"org.apache.spark.sql.cassandra\")\n      .options(Map( \"table\" -> \"requete_1\", \"keyspace\" -> \"gdelt\"))\n      .load()\n\n\ndf_requete_1.createOrReplaceTempView(\"rq_1_view\")\n\n\nz.show(spark.sql(\"\"\"SELECT * FROM rq_1_view ORDER BY NbTotalMentions DESC\"\"\"))","user":"anonymous","dateUpdated":"2020-02-04T16:37:19+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580834064482_2066908655","id":"20200123-181408_1915708111","dateCreated":"2020-02-04T16:34:24+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1380"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580834288447_-1526641402","id":"20200204-163808_1240179108","dateCreated":"2020-02-04T16:38:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1930","text":"val agg = \"day\"\nval country = \"FR\"\nval source = \"dayoo.com\"","dateUpdated":"2020-02-04T16:47:11+0000","dateFinished":"2020-02-04T16:38:22+0000","dateStarted":"2020-02-04T16:38:22+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"agg: String = month, day\n"}]}},{"title":"Requete 2 ","text":"val df_requete_2 = spark.read\n      .format(\"org.apache.spark.sql.cassandra\")\n      .options(Map( \"table\" -> \"requete_2\", \"keyspace\" -> \"gdelt\"))\n      .load()\n    // .filter(\"key='YOUR_KEY'\")\n\n\ndf_2.createOrReplaceTempView(\"rq_2_view\")\n\n\nz.show(spark.sql(s\"\"\"SELECT ActionGeo_CountryCode,sum(NumMentions),$agg FROM rq_2_view WHERE ActionGeo_CountryCode==$country GROUP BY ActionGeo_CountryCode,$agg ORDER BY sum(NumMentions) DESC LIMIT 100\"\"\"))","user":"anonymous","dateUpdated":"2020-02-04T16:46:59+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580834064482_-1748698346","id":"20200123-183752_276300072","dateCreated":"2020-02-04T16:34:24+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1381"},{"title":"Requete 3 ","text":"val df_requete_3_1 = spark.read\n      .format(\"org.apache.spark.sql.cassandra\")\n      .options(Map( \"table\" -> \"requete_3_1\", \"keyspace\" -> \"gdelt\"))\n      .load()\n\ndf_requete_3_1.createOrReplaceTempView(\"rq_3_1_view\")\n\n\nz.show(spark.sql(s\"\"\"SELECT SourceCommonName,$agg,theme,avg_tone,sum(NbArticles) FROM rq_3_1_view WHERE SourceCommonName==\"$source\" GROUP BY SourcecommonName,$agg,theme,avg_tone ORDER BY sum(NbArticles) DESC\"\"\")) ","user":"anonymous","dateUpdated":"2020-02-04T16:43:35+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580834064482_396372739","id":"20200123-183911_898510149","dateCreated":"2020-02-04T16:34:24+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1382"},{"text":"val df_requete_3_2 = spark.read\n      .format(\"org.apache.spark.sql.cassandra\")\n      .options(Map( \"table\" -> \"requete_3_2\", \"keyspace\" -> \"gdelt\"))\n      .load()\n    // .filter(\"key='YOUR_KEY'\")\n\n\ndf_requete_3_2.createOrReplaceTempView(\"rq_3_2_view\")\n\n\nz.show(spark.sql(s\"\"\"SELECT SourceCommonName,$agg,person,avg_tone,sum(NbArticles) FROM rq_3_2_view WHERE SourceCommonName==\"$source\" GROUP BY SourcecommonName,$agg,person,avg_tone ORDER BY sum(NbArticles) DESC\"\"\")) ","user":"anonymous","dateUpdated":"2020-02-04T16:45:02+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580834064482_337566757","id":"20200123-184020_1416608802","dateCreated":"2020-02-04T16:34:24+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1383"},{"text":"val df_requete_3_3 = spark.read\n      .format(\"org.apache.spark.sql.cassandra\")\n      .options(Map( \"table\" -> \"requete_3_3\", \"keyspace\" -> \"gdelt\"))\n      .load()\n\n\ndf_requete_3_3.createOrReplaceTempView(\"rq_3_3_view\")\n\n\nz.show(spark.sql(s\"\"\"SELECT SourceCommonName,$agg,locations,avg_tone,sum(NbArticles) FROM rq_3_3_view WHERE SourceCommonName==\"$source\" GROUP BY SourcecommonName,$agg,locations,avg_tone ORDER BY sum(NbArticles) DESC\"\"\")) ","user":"anonymous","dateUpdated":"2020-02-04T16:44:56+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580834064482_1106639709","id":"20200123-184247_533650359","dateCreated":"2020-02-04T16:34:24+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1384"},{"title":"Requete 4 ","text":"val df_requete_4 = spark.read\n      .format(\"org.apache.spark.sql.cassandra\")\n      .options(Map( \"table\" -> \"requete_4\", \"keyspace\" -> \"gdelt\"))\n      .load()\n\n\ndf_requete_4.createOrReplaceTempView(\"rq_4_view\")\n\n\nz.show(spark.sql(s\"\"\"SELECT ActionGeo_CountryCode,$agg,sum(nombre_article) FROM rq_4_view WHERE country1==$country GROUP BY ActionGeo_CountryCode,$agg ORDER BY sum(nombre_article) DESC\"\"\"))","user":"anonymous","dateUpdated":"2020-02-04T16:48:05+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580834064483_1612426435","id":"20200123-184327_1476872876","dateCreated":"2020-02-04T16:34:24+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1385"}],"name":"Visualisation","id":"2EZV535R8","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}